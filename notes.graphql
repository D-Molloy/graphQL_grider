# ~~~~~~~~~~~~~~~~~~~~~
#     FRAGEMENTS
# ~~~~~~~~~~~~~~~~~~~~~

# Old Query
{
  apple: company(id: "1") {
    id
    name
    description
  }
  google: company(id: "2") {
    id
    name
    description
  }
}

# New Query:
{
  apple: company(id: "1") {
    ...companyDetails
  }
  google: company(id: "2") {
    ...companyDetails
  }
}

    # Creating the fragment - if we try to add fields not in the Company schema we'll get an error
fragment companyDetails on Company {
  id
  name
  description
}

# Output
{
  "data": {
    "apple": {
      "id": "1",
      "name": "Apple",
      "description": "iphone"
    },
    "google": {
      "id": "2",
      "name": "Google",
      "description": "search"
    }
  }
}


# ~~~~~~~~~~~~~~~~~~~~~
#     Mutations
# ~~~~~~~~~~~~~~~~~~~~~

# when we want to Create, Update, Delete data via graphQL

mutation{
  # specify which mutation and pass args
  addUser(firstName: "Blair", age: 26){
    # MUST specify the data you want back - comes from the resolve method
    id
    firstName
    age
  }
}

# result
{
  "data": {
    "addUser": {
      "id": "d1QU~Mb",
      "firstName": "Blair",
      "age": 26
    }
  }
}


# ~~~~~~~~~~~~~~~~~~~~~
#    GraphQL Clients
# ~~~~~~~~~~~~~~~~~~~~~

#   Front end - a React application Very tightly coupled with a graphql client
#   The purpose of the client is to do exactly what GraphQL does - send and get information from the GraphQL server

#    Three types of GraphQL clients
#       1. Lokka - As simple as possible.  Basic queries, mutations.  Some simple caching.
#       2. Apollo Client or Apollo Stack (can replace express-graphql) - Produced by the same guys as Meteor JS.  Good balance between features and complexity.  Ambitious feature set, with increasing difficulty.  Not a ton of experience in the GraphQL experience
#       3. Relay -  Amazing performance for MOBILE.  By far the most insanely complex.  What is used by the FB team.  Pay for performance with complexity.  Very complex mutations

# Apollo server vs GraphQL-Express
#     Why one over the other
#       GraphQL-Express is the reference implementation - official implementation that FB maintatins
#       Apollo is its own implementation - still in active development and has and will dramatically changed

#   Big diff between the two - Express-GraphQL co-locates the types and resovlers in one GraphQLObjectType whereas Apollo has them in seperate files